# Requires DelimitedFiles

# Read initial conditions
function readIC(fileIC, typeIC)
	if typeIC == "velocity"
		vel, maxFreq = readVelocityIC(fileIC)
		q = curl(vel)
		qhat = rfft(q)
	elseif typeIC == "vorticityFreq"
		qhat, maxFreq = readVorticityFreqIC(fileIC)
		vel = []
	end
	return qhat, maxFreq, vel
end


# Read in velocity initial conditions generated by generateVelocityIC.jl
# Require N odd (for now)
function readVelocityIC(file)
	vel = readdlm(file, ',', Float64)
	N = Int(sqrt(length(vel)/2))
	return reshape(vel, N, N, 2), Int((N - 1)/2)
end

function readVorticityFreqIC(file)
	qhat = readdlm(file, ',', Complex{Float64})
	N = Int( 1/2 * (-1 + sqrt(1 + 8*length(qhat))))
	return qhat, Int((N-1)/2)
end